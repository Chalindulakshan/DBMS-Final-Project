//All Procedures Here

//procedure for attendence eligibility

DELIMITER //

CREATE PROCEDURE GetStudentAttendance(IN p_reg_no VARCHAR(8))
BEGIN
    SELECT 
        a.reg_no,
        u.F_name,
        u.L_name,
        t.c_code,
        c.c_name,
        a.session_id,
        a.type,
        ROUND(AVG(a.change_status='Present')*100) AS attendence_percentage,
        ROUND(AVG(a.change_status='Present')*100) AS attendence_percentage_with_medical,
        CASE 
            WHEN ROUND(AVG(a.change_status='Present')*100) >= 80 THEN 'eligible'
            ELSE 'not eligible'
        END AS is_eligible
    FROM attendence a
    INNER JOIN timetable t ON a.session_id = t.session_id
    INNER JOIN course_unit c ON t.c_code = c.c_code
    INNER JOIN user u ON a.reg_no = u.user_id
    WHERE a.reg_no = p_reg_no
    GROUP BY a.reg_no, t.c_code, a.type;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetStudentAttendance(IN p_c_code VARCHAR(8))
BEGIN
    SELECT 
        t.c_code,
        a.reg_no,
        count(a.change_status = 'Present') AS dates,
        ROUND(AVG(a.change_status = 'Present') * 100) AS attendance_percentage,
        CASE 
            WHEN ROUND(AVG(a.change_status = 'Present') * 100) >= 80 THEN 'eligible'
            ELSE 'not eligible'
        END AS is_eligible
    FROM attendence a
    INNER JOIN timetable t ON a.session_id = t.session_id
    WHERE t.c_code = p_c_code
    GROUP BY a.reg_no,t.c_code;
END //

DELIMITER ;
